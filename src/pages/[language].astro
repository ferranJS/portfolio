---
import Layout from "../layouts/Layout.astro"
import Header from "../components/Header.astro"
import Footer from "../components/Footer.astro"
import Projects from "../components/Projects.astro"
import { getLangFromUrl, useTranslations } from "../i18n/utils"
import { languages } from "../i18n/languages"
import Background from "../components/Background.astro"

const baseURL = import.meta.env.BASE_URL

export function getStaticPaths() {
  const paths = []
  for (const language of Object.keys(languages)) {
    paths.push({ params: { language } })
  }
  return paths
}

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<Layout title="FerranJS Web" description={t("metaDescription")}>
  <main>
    <Header />
    <section class="flex h-screen items-center">
      <div class="px-7 pr-10 text-[1.2rem] font-thin sm:px-24 xl:px-48 [&>p]:mb-1 [&>p]:max-w-2xl">
        <!-- [&>p]:text-gray-950 -->
        <h1 class="mb-2 font-heming text-7xl font-bold">Ferran Ramirez</h1>
        <h2 class="mb-6 font-heming text-5xl font-medium leading-[1.15]">
          <span class="u underline !decoration-[3px] !underline-offset-[5px]">
            <!-- animate-[underline-color-shift_15s_infinite] -->
            full stack</span
          > developer
        </h2>
        <p>
          {
            lang == "es" ? (
              <>
                <span class="u underline !decoration-[1.3px]">Ingeniero</span> de Software con 2 años de
                experiencia como desarrollador
                <span class="u underline !decoration-[1.3px]">Full Stack</span>, experimentado en
              </>
            ) : lang == "de" ? (
              <>
                Software <span class="u underline !decoration-[1.3px]">Ingenieur</span> mit 2 Jahren Erfahrung
                als
                <span class="u underline !decoration-[1.3px]">Full Stack</span> Entwickler, erfahren in
              </>
            ) : lang == "fr" ? (
              <>
                <span class="u underline !decoration-[1.3px]">Ingénieur</span> logiciel avec 2 ans d'expérience
                en tant que
                <span class="u underline !decoration-[1.3px]">Full Stack</span> développeur, expérimenté en
              </>
            ) : lang == "it" ? (
              <>
                <span class="u underline !decoration-[1.3px]">Ingegnere</span> software con 2 anni di
                esperienza come
                <span class="u underline !decoration-[1.3px]">Full Stack</span> developer, esperto in
              </>
            ) : (
              <>
                Software <span class="u underline !decoration-[1.3px]">Engineer</span> with 2 years of
                experience as a <span class="u underline !decoration-[1.3px]">Full Stack</span> developer,
                experienced in
              </>
            )
          }
          <span class="u md:underline md:!decoration-red-600">Angular</span>,
          <span class="u md:underline md:!decoration-orange-400">Astro</span>,
          <span class="u md:underline md:!decoration-sky-400">React</span>, Firebase, Ionic, Capacitor
          {t("and")} Tailwind.
        </p>
        <p>
          {t("phrase1")}
          <!-- {t("phrase2")} -->
        </p>
        <p>
          {t("phrase3")}
        </p>
      </div>
    </section>
    <Projects />
    <!-- <section id="contact" class="flex h-screen items-center justify-center"></section> -->
    <Footer />
    <Background />
  </main>
</Layout>

<style is:global>
  html {
    /* scroll-snap-type: y mandatory;
    scroll-snap-stop: always;
    scroll-behavior: smooth; */
  }
  span.u {
    @apply decoration-indigo-400 decoration-wavy decoration-[1.1px] underline-offset-[2px];
  }
  body {
    animation: bg-color-shift 15s infinite;
  }
  :root {
    --gradien1: linear-gradient(160deg, rgba(255, 255, 255, 0) 30%, transparent);
    --gradien2: linear-gradient(20deg, rgba(255, 255, 255, 0) 20%, transparent);
  }
  @keyframes bg-color-shift {
    0%,
    100% {
      background: var(--gradient1), var(--gradient2), rgb(0, 163, 155);
    }
    17% {
      background: var(--gradient1), var(--gradient2), green;
    }
    34% {
      background: var(--gradient1), var(--gradient2), green;
    }
    51% {
      background: var(--gradient1), var(--gradient2), green;
    }
    68% {
      background: var(--gradient1), var(--gradient2), green;
    }
    85% {
      background: var(--gradient1), var(--gradient2), rgb(198, 56, 44);
    }
  }
</style>
